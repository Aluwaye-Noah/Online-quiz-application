using System;
using System.Collections.Generic;
using System.Windows.Forms;

namespace QuizApplication
{
    public partial class MainMenuForm : Form
    {
        private List<Quiz> quizzes = new List<Quiz>();

        public MainMenuForm()
        {
            InitializeComponent();
            LoadQuizzes();
            LoadMainMenu();
        }

        private void LoadQuizzes()
        {
            // Creating a quiz and adding questions
            Quiz generalKnowledgeQuiz = new Quiz("Current Affairs");
            generalKnowledgeQuiz.AddQuestion(
                "Who is the Current Queen of England?",
                new string[] { "Me", "You", "Your Nan" },
                "Late Queen Elizabeth"
            );
            generalKnowledgeQuiz.AddQuestion(
                "When did WW2 end?",
                new string[] { "2002", "1945", "right now" },
                "1945"
            );
            generalKnowledgeQuiz.AddQuestion(
                "Who is Clint419?",
                new string[] { "A dealer", "A fashion designer", "Head of a cartel" },
                "Him"
            );
            generalKnowledgeQuiz.AddQuestion(
                "Who is WAYE and what is he famous for?",
                new string[] { "A fashion designer", "A well-known brand owner and a fashion designer" },
                "One of the greats"
            );

            // Adding the quiz to the list of quizzes
            quizzes.Add(generalKnowledgeQuiz);

            // Load additional quizzes as needed
        }

        private void LoadMainMenu()
        {
            foreach (var quiz in quizzes)
            {
                var button = new Button();
                button.Text = quiz.Name;
                button.Click += (sender, e) => StartQuiz(quiz);
                flowLayoutPanel1.Controls.Add(button);
            }
        }

        private void StartQuiz(Quiz quiz)
        {
            Hide();
            QuizForm quizForm = new QuizForm(quiz);
            quizForm.FormClosed += (s, args) => Show(); // Show main menu after quiz
            quizForm.Show();
        }
    }

    public class Quiz
    {
        public string Name { get; }
        public List<Question> Questions { get; }

        public Quiz(string name)
        {
            Name = name;
            Questions = new List<Question>();
        }

        public void AddQuestion(string text, string[] options, string correctAnswer)
        {
            Question question = new Question(text, options, correctAnswer);
            Questions.Add(question);
        }
    }

    public class Question
    {
        public string Text { get; }
        public string[] Options { get; }
        public string CorrectAnswer { get; }
        // Add a hint property here if needed

        public Question(string text, string[] options, string correctAnswer)
        {
            Text = text;
            Options = options;
            CorrectAnswer = correctAnswer;
        }
    }

    public partial class QuizForm : Form
    {
        private Quiz quiz;
        private int currentQuestionIndex = 0;
        private int score = 0;
        private Timer questionTimer;
        private int timeLimitInSeconds = 30; // Example time limit for each question
        private bool hintsUsed = false;

        public QuizForm(Quiz quiz)
        {
            InitializeComponent();
            this.quiz = quiz;
            InitializeTimer();
            DisplayQuestion();
        }

        private void InitializeTimer()
        {
            questionTimer = new Timer();
            questionTimer.Interval = 1000; // Timer ticks every second
            questionTimer.Tick += QuestionTimer_Tick;
        }

        private void DisplayQuestion()
        {
            ResetTimer();
            Question question = quiz.Questions[currentQuestionIndex];
            labelQuestion.Text = question.Text;

            radioButtonOption1.Text = question.Options[0];
            radioButtonOption2.Text = question.Options[1];
            radioButtonOption3.Text = question.Options[2];

            ClearOptions();
            StartTimer(); // Start the timer for the current question
        }

        private void StartTimer()
        {
            questionTimer.Start();
        }

        private void ResetTimer()
        {
            timeLimitInSeconds = 30;
            questionTimer.Stop();
        }

        private void QuestionTimer_Tick(object sender, EventArgs e)
        {
            if (timeLimitInSeconds == 0)
            {
                questionTimer.Stop();
                HandleTimeout();
            }
            else
            {
                timeLimitInSeconds--;
            }
        }

        private void HandleTimeout()
        {
            MessageBox.Show("Time's up!");
            ProceedToNextQuestion();
        }

        private void buttonConfirm_Click(object sender, EventArgs e)
        {
            Question question = quiz.Questions[currentQuestionIndex];
            if (radioButtonOption1.Checked && radioButtonOption1.Text == question.CorrectAnswer ||
                radioButtonOption2.Checked && radioButtonOption2.Text == question.CorrectAnswer ||
                radioButtonOption3.Checked && radioButtonOption3.Text == question.CorrectAnswer)
            {
                score++;
            }

            ProceedToNextQuestion();
        }

        private void ProceedToNextQuestion()
        {
            currentQuestionIndex++;
            if (currentQuestionIndex < quiz.Questions.Count)
            {
                DisplayQuestion();
            }
            else
            {
                ShowResult();
            }
        }

        private void ShowResult()
        {
            double percentage = (double)score / quiz.Questions.Count * 100;
            MessageBox.Show($"Quiz completed!\nScore: {score}/{quiz.Questions.Count} = {percentage}%");
            Close();
        }

        private void ClearOptions()
        {
            radioButtonOption1.Checked = false;
            radioButtonOption2.Checked = false;
            radioButtonOption3.Checked = false;
        }

        private void buttonHint_Click(object sender, EventArgs e)
        {
            if (!hintsUsed)
            {
                // Retrieve and display a hint for the current question
                // For example: MessageBox.Show(quiz.Questions[currentQuestionIndex].Hint);
                hintsUsed = true;
            }
            else
            {
                MessageBox.Show("No more hints available!");
            }
        }
    }
}
